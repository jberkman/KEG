@LAZYGLOBAL OFF.

DECLARE LOCAL FUNCTION MMULT {
    DECLARE LOCAL PARAMETER R1, R2, R3, X.
    RETURN V(VDOT(R1, X), VDOT(R2, X), VDOT(R3, X)).
}

DECLARE LOCAL FUNCTION VRCRS {
    DECLARE PARAMETER A, B.
    RETURN V(A:Y*B:Z - A:Z*B:Y, A:Z*B:X - A:X*B:Z, A:X*B:Y - A:Y*B:X).
}

DECLARE LOCAL FUNCTION VL2R {
    DECLARE LOCAL PARAMETER A.
    RETURN V(A:X, A:Z, A:Y).
}

DECLARE LOCAL FUNCTION SHIPFRAME {
    DECLARE LOCAL S IS LEXICON().
    SET S:I TO V(1, 0, 0).
    SET S:J TO V(0, 1, 0).
    SET S:K TO V(0, 0, 1).
    SET S:O TO V(0, 0, 0).
    RETURN S.
}

DECLARE LOCAL FUNCTION INERTIALFRAME {
    DECLARE PARAMETER B IS BODY.
    DECLARE LOCAL N IS LEXICON().
    SET N:I TO VL2R(SOLARPRIMEVECTOR).
    SET N:K TO V(0, 0, 1).
    SET N:J TO VRCRS(N:K, N:I).
    RETURN N.
}

DECLARE LOCAL FUNCTION FIXEDFRAME {
    PARAMETER B IS BODY.
    DECLARE LOCAL E IS LEXICON().
}

DECLARE LOCAL FUNCTION PERIFOCALFRAME {
    DECLARE PARAMETER N IS INERTIALFRAME().
    DECLARE PARAMETER O IS OBT.

    DECLARE LOCAL COSAOP IS COS(O:ARGUMENTOFPERIAPSIS).
    DECLARE LOCAL SINAOP IS SIN(O:ARGUMENTOFPERIAPSIS).

    DECLARE LOCAL COSLAN IS COS(O:LAN).
    DECLARE LOCAL SINLAN IS SIN(O:LAN).

    DECLARE LOCAL COSI IS COS(O:INCLINATION).
    DECLARE LOCAL SINI IS SIN(O:INCLINATION).

    DECLARE LOCAL R1 IS V(COSAOP * COSLAN - SINAOP * COSI * SINLAN,
        -SINAOP * COSLAN - COSAOP * COSI * SINLAN,
        SINI * SINLAN).
    DECLARE LOCAL R2 IS V(COSAOP * SINLAN + SINAOP * COSI * COSLAN,
        -SINAOP * SINLAN + COSAOP * COSI * COSLAN,
        -SINI * COSLAN).
    DECLARE LOCAL R3 IS V(SINAOP * SINI, COSAOP * SINI, COSI).

    PRINT R1.
    PRINT R2.
    PRINT R3.

    DECLARE LOCAL P IS LEXICON().
    SET P:I TO R1:X * N:I + R2:X * N:J + R3:X * N:K. //RMMULT(R1, R2, R3, N:I).
    SET P:J TO R1:Y * N:I + R2:Y * N:J + R3:Y * N:K. //MMULT(R1, R2, R3, N:J).
    SET P:K TO R1:Z * N:I + R2:Z * N:J + R3:Z * N:K. //MMULT(R1, R2, R3, N:K).    
    RETURN P.
}

DECLARE LOCAL FUNCTION ORBITFRAME {
    PARAMETER OBT IS ORBIT.
    DECLARE LOCAL O IS LEXICON().
}

DECLARE LOCAL FUNCTION ORBITVELOCITYFRAME {
    PARAMETER OBT IS ORBIT.
    DECLARE LOCAL V IS LEXICON().
}

DECLARE LOCAL FUNCTION SHIP2SOI {
    PARAMETER R IS SHIP:POSITION.
    PARAMETER B IS BODY.
    RETURN R - B:POSITION.
}

DECLARE LOCAL FUNCTION SOI2SHIP {
    PARAMETER R IS SHIP:POSITION.
    PARAMETER B IS BODY.
    RETURN R + B:POSITION.
}

CLEARVECDRAWS().

DECLARE LOCAL V0 IS V(0,0,0).

DECLARE LOCAL SCALE IS 1.
DECLARE LOCAL WIDTH IS 1.

DECLARE LOCAL SLEN IS 200000.
DECLARE LOCAL NLEN IS 2 * BODY:RADIUS.

DECLARE LOCAL SIVEC IS VECDRAW(V0, SLEN * V(1, 0, 0), RED, "", SCALE, TRUE, WIDTH).
DECLARE LOCAL SJVEC IS VECDRAW(V0, SLEN * V(0, 0, 1), GREEN, "", SCALE, TRUE, WIDTH).
DECLARE LOCAL SKVEC IS VECDRAW(V0, SLEN * V(0, 1, 0), BLUE, "", SCALE, TRUE, WIDTH).

DECLARE LOCAL NIVEC IS VECDRAW(V0, V0, RED, "", SCALE, TRUE, WIDTH).
DECLARE LOCAL NJVEC IS VECDRAW(V0, V0, GREEN, "", SCALE, TRUE, WIDTH).
DECLARE LOCAL NKVEC IS VECDRAW(V0, V0, BLUE, "", SCALE, TRUE, WIDTH).

DECLARE LOCAL PIVEC IS VECDRAW(V0, V0, RED, "", SCALE, TRUE, WIDTH).
DECLARE LOCAL PJVEC IS VECDRAW(V0, V0, GREEN, "", SCALE, TRUE, WIDTH).
DECLARE LOCAL PKVEC IS VECDRAW(V0, V0, BLUE, "", SCALE, TRUE, WIDTH).

DECLARE LOCAL RVEC IS VECDRAW(V0, V0, YELLOW, "", SCALE, TRUE, WIDTH).
// DECLARE LOCAL VVEC IS VECDRAW(V0, V0, MAGENTA, "V", SCALE, TRUE, WIDTH).

DECLARE LOCAL S IS SHIPFRAME().

UNTIL 0 {
    DECLARE LOCAL N IS INERTIALFRAME().
    PRINT N.

    SET RVEC:START TO BODY:POSITION.
    SET RVEC:VEC TO 1000000 * SOLARPRIMEVECTOR.

    SET NIVEC:START TO BODY:POSITION.
    SET NJVEC:START TO BODY:POSITION.
    SET NKVEC:START TO BODY:POSITION.

    SET NIVEC:VEC TO NLEN * VL2R(N:I).
    SET NJVEC:VEC TO NLEN * VL2R(N:J).
    SET NKVEC:VEC TO NLEN * VL2R(N:K).

    IF HASTARGET {
        DECLARE LOCAL P IS PERIFOCALFRAME(N, TARGET:OBT).
        DECLARE LOCAL PLEN IS TARGET:OBT:PERIAPSIS + TARGET:BODY:RADIUS.

        PRINT P.
        //BREAK.
        PRINT PLEN.

        SET PIVEC:START TO BODY:POSITION.
        SET PJVEC:START TO BODY:POSITION.
        SET PKVEC:START TO BODY:POSITION.

        SET PIVEC:VEC TO PLEN * VL2R(P:I).
        SET PJVEC:VEC TO PLEN * VL2R(P:J).
        SET PKVEC:VEC TO PLEN * VL2R(P:K).

        PRINT PIVEC:VEC:MAG.
        PRINT PJVEC:VEC:MAG.
        PRINT PKVEC:VEC:MAG.
    }

    WAIT 1.
}
